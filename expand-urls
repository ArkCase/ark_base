#!/usr/bin/env python3

import os
import re
import sys
import urllib.parse

#
# This is the prefix that will be required of all envvars to be processed
#
PREFIX = "ARKCASE"

if len(sys.argv) > 1:
	p = sys.argv[1]
	if re.match("^[a-zA-Z_][a-zA-Z0-9_]*$", p):
		PREFIX = p

#
# Make sure the prefix ends with an underscore
#
if not PREFIX.endswith("_"):
	PREFIX += "_"

#
# This map links names of fields to the suffixes that will be applied
# when rendering the environment variables
#
parts = {
	"scheme" : "scheme",
	"path" : "path",
	"hostname" : "host",
	"port" : "port"
}

#
# This tiny function will parse out the URL into
# its parts, but only if the variable name matches
# the pattern ${PREFIX}_*_URL
#
def parse_url(name, value):
	if name.startswith(PREFIX) and name.endswith("_URL"):
		return urllib.parse.urlparse(value)
	return None

#
# Ok... now iterate over all envvars, and process
# them all, knowing that the parse_url() function
# will only process the ones we're interested in
#
for name, value in os.environ.items():
	url = parse_url(name, value)
	if not url:
		continue

	for field, suffix in parts.items():
		partValue = ""

		if hasattr(url, field):
			v = getattr(url, field)
			if v:
				partValue = v

		#
		# Spit out stuff that can be eval'd by the shell
		#
		partValue = str(partValue).replace("'", "'\\''")
		print(f"export {name}_{suffix.upper()}='{partValue}';")
